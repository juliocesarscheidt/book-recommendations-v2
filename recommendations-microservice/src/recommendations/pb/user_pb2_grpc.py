# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pb.user_pb2 as user__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UserSignUp = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/UserSignUp",
            request_serializer=user__pb2.UserSignUpRequest.SerializeToString,
            response_deserializer=user__pb2.UserSignUpResponse.FromString,
        )
        self.UserSignIn = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/UserSignIn",
            request_serializer=user__pb2.UserSignInRequest.SerializeToString,
            response_deserializer=user__pb2.UserSignInResponse.FromString,
        )
        self.CreateUser = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/CreateUser",
            request_serializer=user__pb2.CreateUserRequest.SerializeToString,
            response_deserializer=user__pb2.CreateUserResponse.FromString,
        )
        self.GetUser = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/GetUser",
            request_serializer=user__pb2.GetUserRequest.SerializeToString,
            response_deserializer=user__pb2.GetUserResponse.FromString,
        )
        self.UpdateUser = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/UpdateUser",
            request_serializer=user__pb2.UpdateUserRequest.SerializeToString,
            response_deserializer=user__pb2.UpdateUserResponse.FromString,
        )
        self.DeleteUser = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/DeleteUser",
            request_serializer=user__pb2.DeleteUserRequest.SerializeToString,
            response_deserializer=user__pb2.DeleteUserResponse.FromString,
        )
        self.ListUser = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/ListUser",
            request_serializer=user__pb2.ListUserRequest.SerializeToString,
            response_deserializer=user__pb2.ListUserResponse.FromString,
        )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UserSignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserSignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "UserSignUp": grpc.unary_unary_rpc_method_handler(
            servicer.UserSignUp,
            request_deserializer=user__pb2.UserSignUpRequest.FromString,
            response_serializer=user__pb2.UserSignUpResponse.SerializeToString,
        ),
        "UserSignIn": grpc.unary_unary_rpc_method_handler(
            servicer.UserSignIn,
            request_deserializer=user__pb2.UserSignInRequest.FromString,
            response_serializer=user__pb2.UserSignInResponse.SerializeToString,
        ),
        "CreateUser": grpc.unary_unary_rpc_method_handler(
            servicer.CreateUser,
            request_deserializer=user__pb2.CreateUserRequest.FromString,
            response_serializer=user__pb2.CreateUserResponse.SerializeToString,
        ),
        "GetUser": grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=user__pb2.GetUserRequest.FromString,
            response_serializer=user__pb2.GetUserResponse.SerializeToString,
        ),
        "UpdateUser": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUser,
            request_deserializer=user__pb2.UpdateUserRequest.FromString,
            response_serializer=user__pb2.UpdateUserResponse.SerializeToString,
        ),
        "DeleteUser": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUser,
            request_deserializer=user__pb2.DeleteUserRequest.FromString,
            response_serializer=user__pb2.DeleteUserResponse.SerializeToString,
        ),
        "ListUser": grpc.unary_unary_rpc_method_handler(
            servicer.ListUser,
            request_deserializer=user__pb2.ListUserRequest.FromString,
            response_serializer=user__pb2.ListUserResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "github.com.juliocesarscheidt.usersmicroservice.UserService",
        rpc_method_handlers,
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UserSignUp(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/UserSignUp",
            user__pb2.UserSignUpRequest.SerializeToString,
            user__pb2.UserSignUpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserSignIn(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/UserSignIn",
            user__pb2.UserSignInRequest.SerializeToString,
            user__pb2.UserSignInResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/CreateUser",
            user__pb2.CreateUserRequest.SerializeToString,
            user__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/GetUser",
            user__pb2.GetUserRequest.SerializeToString,
            user__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/UpdateUser",
            user__pb2.UpdateUserRequest.SerializeToString,
            user__pb2.UpdateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/DeleteUser",
            user__pb2.DeleteUserRequest.SerializeToString,
            user__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserService/ListUser",
            user__pb2.ListUserRequest.SerializeToString,
            user__pb2.ListUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )


class UserRateServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpsertUserRate = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/UpsertUserRate",
            request_serializer=user__pb2.UpsertUserRateRequest.SerializeToString,
            response_deserializer=user__pb2.UpsertUserRateResponse.FromString,
        )
        self.GetUserRate = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/GetUserRate",
            request_serializer=user__pb2.GetUserRateRequest.SerializeToString,
            response_deserializer=user__pb2.GetUserRateResponse.FromString,
        )
        self.DeleteUserRate = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/DeleteUserRate",
            request_serializer=user__pb2.DeleteUserRateRequest.SerializeToString,
            response_deserializer=user__pb2.DeleteUserRateResponse.FromString,
        )
        self.ListUserRate = channel.unary_unary(
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/ListUserRate",
            request_serializer=user__pb2.ListUserRateRequest.SerializeToString,
            response_deserializer=user__pb2.ListUserRateResponse.FromString,
        )


class UserRateServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpsertUserRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteUserRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListUserRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserRateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "UpsertUserRate": grpc.unary_unary_rpc_method_handler(
            servicer.UpsertUserRate,
            request_deserializer=user__pb2.UpsertUserRateRequest.FromString,
            response_serializer=user__pb2.UpsertUserRateResponse.SerializeToString,
        ),
        "GetUserRate": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserRate,
            request_deserializer=user__pb2.GetUserRateRequest.FromString,
            response_serializer=user__pb2.GetUserRateResponse.SerializeToString,
        ),
        "DeleteUserRate": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUserRate,
            request_deserializer=user__pb2.DeleteUserRateRequest.FromString,
            response_serializer=user__pb2.DeleteUserRateResponse.SerializeToString,
        ),
        "ListUserRate": grpc.unary_unary_rpc_method_handler(
            servicer.ListUserRate,
            request_deserializer=user__pb2.ListUserRateRequest.FromString,
            response_serializer=user__pb2.ListUserRateResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "github.com.juliocesarscheidt.usersmicroservice.UserRateService",
        rpc_method_handlers,
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserRateService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpsertUserRate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/UpsertUserRate",
            user__pb2.UpsertUserRateRequest.SerializeToString,
            user__pb2.UpsertUserRateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetUserRate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/GetUserRate",
            user__pb2.GetUserRateRequest.SerializeToString,
            user__pb2.GetUserRateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteUserRate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/DeleteUserRate",
            user__pb2.DeleteUserRateRequest.SerializeToString,
            user__pb2.DeleteUserRateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListUserRate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/github.com.juliocesarscheidt.usersmicroservice.UserRateService/ListUserRate",
            user__pb2.ListUserRateRequest.SerializeToString,
            user__pb2.ListUserRateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
