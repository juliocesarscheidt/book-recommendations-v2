version: '3.4'

services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:9.6-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB:-book_db}
    networks:
      - msbook
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw

  mongo:
    container_name: mongo
    hostname: mongo
    image: mongo:5.0
    command: mongod --config /etc/mongo/mongod.conf --storageEngine wiredTiger
    ports:
      - 28017:27017
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - msbook
    restart: on-failure
    volumes:
      - mongo-data:/data/db:rw
      - mongo-home:/home/mongodb:rw
      - ./mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./mongo/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
      - ./mongo/init.js:/init.js:ro

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: juliocesarmidia/rabbitmq:latest
    build:
      context: ./rabbitmq
    ports:
      - 5872:5672
      - 15872:15672
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    networks:
      - msbook
    restart: on-failure

  redis:
    container_name: redis
    hostname: redis
    image: redis:5.0
    ports:
      - 6379:6379
    networks:
      - msbook
    restart: on-failure

networks:
  msbook:
    external:
      name: msbook

volumes:
  postgres-data: {}
  mongo-data: {}
  mongo-home: {}

secrets: {}
