syntax = "proto3";

// import "google/protobuf/timestamp.proto";

package github.com.juliocesarscheidt.usersmicroservice;

option go_package = "./protofiles;pb";

message User {
  string uuid = 1;
  string name = 2;
  string surname = 3;
  string email = 4;
  string phone = 5;
  string created_at = 6;
  string updated_at = 7;
  // google.protobuf.Timestamp created_at = 6;
  // google.protobuf.Timestamp updated_at = 7;
}

message UserRequest {
  string name = 1;
  string surname = 2;
  string email = 3;
  string phone = 4;
}

message CreateUserRequest {
  UserRequest userRequest = 1;
}

message CreateUserResponse {
  string uuid = 1;
}

message GetUserRequest {
  string uuid = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string uuid = 1;
  UserRequest userRequest = 2;
}

message UpdateUserResponse {
}

message DeleteUserRequest {
  string uuid = 1;
}

message DeleteUserResponse {
}

message ListUserRequest {
  int64 page = 1;
  int64 size = 2;
}

message ListUserResponse {
  repeated User users = 1;
}

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUser(ListUserRequest) returns (ListUserResponse);
}

message Rate {
  string book_uuid = 2;
  float rate = 3;
}

message UserRate {
  string user_uuid = 1;
  repeated Rate rates = 2;
  string created_at = 3;
  string updated_at = 4;
  // google.protobuf.Timestamp created_at = 6;
  // google.protobuf.Timestamp updated_at = 7;
}

message UserRateRequest {
  string user_uuid = 1;
  string book_uuid = 2;
  float rate = 3;
}

message UpsertUserRateRequest {
  UserRateRequest userRateRequest = 1;
}

message UpsertUserRateResponse {
  string user_uuid = 1;
}

message GetUserRateRequest {
  string user_uuid = 1;
}

message GetUserRateResponse {
  UserRate userRate = 1;
}

message DeleteUserRateRequest {
  string user_uuid = 1;
}

message DeleteUserRateResponse {
}

message ListUserRateRequest {
  int64 page = 1;
  int64 size = 2;
}

message ListUserRateResponse {
  repeated UserRate userRates = 1;
}

service UserRateService {
  rpc UpsertUserRate(UpsertUserRateRequest) returns (UpsertUserRateResponse);
  rpc GetUserRate(GetUserRateRequest) returns (GetUserRateResponse);
  rpc DeleteUserRate(DeleteUserRateRequest) returns (DeleteUserRateResponse);
  rpc ListUserRate(ListUserRateRequest) returns (ListUserRateResponse);
}
